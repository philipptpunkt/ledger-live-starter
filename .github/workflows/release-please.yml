name: Release Please

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write
  issues: write
  repository-projects: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - uses: google-github-actions/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.PAT_TOKEN }}
          release-type: go
          package-name: ledger-live-starter
          target-branch: main

      # Build and upload binaries only when a release is created
      - uses: actions/checkout@v4
        if: ${{ steps.release.outputs.release_created }}

      - name: Set up Go
        if: ${{ steps.release.outputs.release_created }}
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Get dependencies
        if: ${{ steps.release.outputs.release_created }}
        run: go mod download

      - name: Build cross-platform binaries
        if: ${{ steps.release.outputs.release_created }}
        env:
          CGO_ENABLED: 0
        run: |
          mkdir -p dist

          # Build with version information
          VERSION="${{ steps.release.outputs.tag_name }}"
          BUILD_TIME="$(date -u +%Y-%m-%dT%H:%M:%SZ)"
          LDFLAGS="-s -w -X main.Version=${VERSION} -X main.BuildTime=${BUILD_TIME}"

          # Linux AMD64
          GOOS=linux GOARCH=amd64 go build -ldflags="${LDFLAGS}" -o dist/ledger-live-linux-amd64 ./cmd/ledger-live

          # Linux ARM64
          GOOS=linux GOARCH=arm64 go build -ldflags="${LDFLAGS}" -o dist/ledger-live-linux-arm64 ./cmd/ledger-live

          # macOS AMD64
          GOOS=darwin GOARCH=amd64 go build -ldflags="${LDFLAGS}" -o dist/ledger-live-darwin-amd64 ./cmd/ledger-live

          # macOS ARM64 (Apple Silicon)
          GOOS=darwin GOARCH=arm64 go build -ldflags="${LDFLAGS}" -o dist/ledger-live-darwin-arm64 ./cmd/ledger-live

          # Windows AMD64
          GOOS=windows GOARCH=amd64 go build -ldflags="${LDFLAGS}" -o dist/ledger-live-windows-amd64.exe ./cmd/ledger-live

      - name: Upload Release Assets
        if: ${{ steps.release.outputs.release_created }}
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          gh release upload ${{ steps.release.outputs.tag_name }} dist/*
